[gd_scene load_steps=11 format=3 uid="uid://dntste84fjqca"]

[ext_resource type="Texture2D" uid="uid://bkctqnxn0hnhj" path="res://Assets/Lights/lightbox.png" id="1"]
[ext_resource type="PackedScene" uid="uid://cfgbm0iobxxv0" path="res://Game Objects/Actors/Players/Rose/RosePrefab.tscn" id="4"]
[ext_resource type="Texture2D" uid="uid://dgdh8qvofq6qe" path="res://Assets/Tilesets/Forest/Forest Elements.png" id="5_a46ns"]
[ext_resource type="TileSet" uid="uid://c5wlc2imhei8u" path="res://Resources/Tilesets/PrimititveTileset.tres" id="6_0x2po"]
[ext_resource type="PackedScene" uid="uid://3taie1a4v4n5" path="res://Game Objects/Testing/Light2D.tscn" id="7"]
[ext_resource type="TileSet" uid="uid://qdwxpeiw2ffb" path="res://Resources/Tilesets/Ledges.tres" id="7_ustfr"]
[ext_resource type="Texture2D" uid="uid://cqhimbi2gll1q" path="res://Assets/Prototyping/Tutorial_A1.png" id="8"]
[ext_resource type="Script" path="res://Scripts/Objects/TileMap/ledge_tilemap_gen.gd" id="8_1hg51"]

[sub_resource type="Shader" id="Shader_2g5qc"]
code = "shader_type canvas_item;

uniform vec3 cameraPosition = vec3(0.0f);
// Setting a color difference between unlit and specular.
uniform float shadowSubtract = 0.5f;
uniform vec4 unlitColorMix : source_color = vec4(0.0f, 0.0f, 0.0f, 1.0f);
uniform float unlitColorControl = 0.5f;
uniform float theta = 0.0;

void fragment()
{
	vec4 spec = texture(SPECULAR_SHININESS_TEXTURE, UV);
	vec4 col = texture(TEXTURE, UV);
	if(spec.g < 0.5f)
	{
		//COLOR = vec4(col.r - specularAdd, col.g - specularAdd, col.b - specularAdd, col.a);
	}
}

void light() {
    // Calculate the real position of this pixel in 3d space, taking into account
    // the rotation and scale of the model. It's a useful formula for some effects.
    // This could also be done in the vertex shader
    vec3 worldPosition = FRAGCOORD.xyz;

    // Calculate the normal including the model rotation and scale
    vec3 worldNormal = NORMAL.xyz;
	vec3 lightVector = normalize( LIGHT_POSITION - worldPosition );
    vec3 cameraVector = normalize(LIGHT_POSITION - cameraPosition - worldPosition );
	if( LIGHT_IS_DIRECTIONAL) {
		lightVector = LIGHT_DIRECTION;
		cameraVector = LIGHT_DIRECTION;
	}
	float tempx = lightVector.x;
	float tempy = lightVector.y;
	lightVector.x = tempx * cos(theta) - tempy * sin(theta);
	lightVector.y = tempx * sin(theta) + tempy * cos(theta);
    
	vec4 finalColor = (texture(TEXTURE, UV) + LIGHT_COLOR) / 2.0f;
	
    //Substracting the difference from the main color for the shaded part
    vec4 unlitColor = vec4(finalColor.x - shadowSubtract, finalColor.y - shadowSubtract, finalColor.z - shadowSubtract, 1);
    unlitColor = mix(unlitColor, unlitColorMix, unlitColorControl);
    // Adding the difference from the main color for the highlighted part vec4(finalColor.x + specularAdd, finalColor.y + specularAdd, finalColor.z + specularAdd, 1)
    vec4 specularColor = (SPECULAR_SHININESS + LIGHT_COLOR) / 2.0f;

    // An example simple lighting effect, taking the dot product of the normal
    // (which way this pixel is pointing) and a user generated light position
    float brightness = dot( worldNormal, lightVector );
    
    vec3 reflectance = normalize(2.0 * dot(lightVector,worldNormal)*worldNormal-lightVector);

	//vec4 shadowColor = unlitColor
    
    if(dot(lightVector,worldNormal)<0.3){
        LIGHT = unlitColor;
    } else {
        if (dot(worldNormal,lightVector)>0.0){
            LIGHT = finalColor;
            if (length(cameraVector - reflectance)<0.6){
					if (SPECULAR_SHININESS.r > 0.01){
						LIGHT = specularColor;
					}
            }
        }
    }
	//SHADOW_MODULATE = vec4(edgeColor);
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_14u0o"]
shader = SubResource("Shader_2g5qc")
shader_parameter/cameraPosition = null
shader_parameter/shadowSubtract = null
shader_parameter/unlitColorMix = null
shader_parameter/unlitColorControl = null
shader_parameter/theta = null

[node name="Node2D" type="Node2D"]

[node name="CanvasModulate" type="CanvasModulate" parent="."]
color = Color(0.501961, 0.501961, 0.501961, 1)

[node name="MainLights" type="Node2D" parent="."]

[node name="DirectionalLight2D" type="DirectionalLight2D" parent="MainLights"]
rotation = 1.309
color = Color(0, 0, 0, 1)
height = 0.5

[node name="BounceLights" type="Node2D" parent="."]
visible = false
position = Vector2(288, 312)
scale = Vector2(1.35865, 1.09751)

[node name="Light2D9" parent="BounceLights" instance=ExtResource("7")]
light_mask = 0
position = Vector2(-5.8882, -14.5784)
color = Color(0.992157, 1, 0.862745, 1)
energy = 1.0
shadow_item_cull_mask = 0
texture = ExtResource("1")
texture_scale = 1.0

[node name="TutorialA1" type="Sprite2D" parent="."]
visible = false
z_index = -10
position = Vector2(1444, 30)
texture = ExtResource("8")

[node name="RosePrefab" parent="." instance=ExtResource("4")]
position = Vector2(-24, -64)

[node name="Forest32" type="Sprite2D" parent="."]
material = SubResource("ShaderMaterial_14u0o")
position = Vector2(2272, -1088)
texture = ExtResource("5_a46ns")

[node name="TileMap" type="TileMap" parent="."]
visible = false
light_mask = 3
tile_set = ExtResource("6_0x2po")
format = 2
layer_0/tile_data = PackedInt32Array(131082, 0, 0, -851974, 0, 0, -786438, 0, 0, -720902, 0, 0, -655366, 0, 0, -589830, 0, 0, -524294, 0, 0, -458758, 0, 0, -393222, 0, 0, -327686, 0, 0, -262150, 0, 0, -196614, 0, 0, -131078, 0, 0, -65542, 0, 0, -6, 0, 0, 65530, 0, 0, 131087, 0, 0, 131090, 0, 0, 196626, 0, 0, 262162, 0, 0, 262171, 0, 0, 196635, 0, 0, 131099, 0, 0, 131113, 0, 0, 65577, 0, 0, 41, 0, 0, -65495, 0, 0, -131028, 0, 0, -131027, 0, 0, -131026, 0, 0, -131025, 0, 0, -131024, 0, 0, -131023, 0, 0, -131022, 0, 0, -131021, 0, 0, -131020, 0, 0, -131019, 0, 0, -131018, 0, 0, -131013, 0, 0, -131014, 0, 0, -131015, 0, 0, -131016, 0, 0, -131017, 0, 0, 62, 0, 0, 63, 0, 0, 64, 0, 0, -65472, 0, 0, -131008, 0, 0, -130997, 0, 0, -130998, 0, 0, -130999, 0, 0, -131000, 0, 0, -131001, 0, 0, -131002, 0, 0, -131003, 0, 0, -131004, 0, 0, -131005, 0, 0, -131006, 0, 0, -131007, 0, 0, 65598, 0, 0, 131134, 0, 0, 131133, 0, 0, 131132, 0, 0, 196668, 0, 0, 262204, 0, 0, 327740, 0, 0, 327739, 0, 0, 327738, 0, 0, 327737, 0, 0, 327736, 0, 0, 327735, 0, 0, 327734, 0, 0, 393270, 0, 0, 393271, 0, 0, 393272, 0, 0, 393273, 0, 0, 458809, 0, 0, 524345, 0, 0, 589881, 0, 0, 655417, 0, 0, 720953, 0, 0, 786489, 0, 0, 1048636, 0, 0, 1048635, 0, 0, 1048634, 0, 0, 1048633, 0, 0, 1048632, 0, 0, 1048631, 0, 0, 1048630, 0, 0, 1048629, 0, 0, 1048628, 0, 0, 1048627, 0, 0, 1048626, 0, 0, 1048625, 0, 0, 1048624, 0, 0, 1048623, 0, 0, 1048622, 0, 0, 1048621, 0, 0, 983085, 0, 0, 917549, 0, 0, 852013, 0, 0, 786477, 0, 0, 720941, 0, 0, 655405, 0, 0, 589869, 0, 0, 524333, 0, 0, 458797, 0, 0, 393261, 0, 0, 327725, 0, 0, 262189, 0, 0, 196653, 0, 0, 131117, 0, 0, 65581, 0, 0, 65582, 0, 0, 65583, 0, 0, 65584, 0, 0, 65585, 0, 0, 65586, 0, 0, 65587, 0, 0, 65588, 0, 0, 65589, 0, 0, 65590, 0, 0, 131126, 0, 0, 196662, 0, 0, 196663, 0, 0, 131127, 0, 0, 65591, 0, 0, 65592, 0, 0, 65593, 0, 0, 57, 0, 0, -65479, 0, 0, -65478, 0, 0, -65477, 0, 0, 786490, 0, 0, 786491, 0, 0, 786492, 0, 0, 720956, 0, 0, 655420, 0, 0, 655421, 0, 0, 655422, 0, 0, 655423, 0, 0, 655424, 0, 0, 655425, 0, 0, 720961, 0, 0, 786497, 0, 0, 786498, 0, 0, 786499, 0, 0, 786500, 0, 0, 720964, 0, 0, 655428, 0, 0, 589892, 0, 0, 524356, 0, 0, 458820, 0, 0, 393284, 0, 0, 327748, 0, 0, 262212, 0, 0, 196676, 0, 0, 131140, 0, 0, 65604, 0, 0, 65605, 0, 0, 65606, 0, 0, 65607, 0, 0, 65608, 0, 0, 65609, 0, 0, 65610, 0, 0, 65611, 0, 0, 1048637, 0, 0, 1048638, 0, 0, 1048639, 0, 0, 1048640, 0, 0, 1048641, 0, 0, 1048642, 0, 0, 1048643, 0, 0, 1048644, 0, 0, 1048645, 0, 0, 1048646, 0, 0, 1048647, 0, 0, 1048648, 0, 0, 983112, 0, 0, 917576, 0, 0, 852040, 0, 0, 786504, 0, 0, 786505, 0, 0, 786506, 0, 0, 786507, 0, 0, 786508, 0, 0, 786509, 0, 0, 262163, 0, 0, 262164, 0, 0, 262165, 0, 0, 262166, 0, 0, 262167, 0, 0, 262168, 0, 0, 262169, 0, 0, 262170, 0, 0, 131112, 0, 0, 65531, 0, 0, 65532, 0, 0, 65533, 0, 0, 65534, 0, 0, 65535, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 3, 0, 0, 4, 0, 0, 5, 0, 0, 6, 0, 0, 7, 0, 0, 8, 0, 0, 9, 0, 0, 10, 0, 0, 65546, 0, 0, 131086, 0, 0, 131085, 0, 0, 131084, 0, 0, 131083, 0, 0, 65551, 0, 0, 15, 0, 0, 16, 0, 0, 17, 0, 0, 18, 0, 0, 65554, 0, 0, 27, 0, 0, 65563, 0, 0, 28, 0, 0, 29, 0, 0, 30, 0, 0, 31, 0, 0, 32, 0, 0, 33, 0, 0, 34, 0, 0, 35, 0, 0, 65571, 0, 0, 131107, 0, 0, 131108, 0, 0, 131109, 0, 0, 131110, 0, 0, 131111, 0, 0, -131031, 0, 0, -196567, 0, 0, -262103, 0, 0, -262102, 0, 0, -196566, 0, 0, -131029, 0, 0, -131030, 0, 0, -5, 0, 0, -65541, 0, 0, -131077, 0, 0, -196613, 0, 0, -262149, 0, 0, -327685, 0, 0, -393221, 0, 0, -458757, 0, 0)

[node name="TileMap" type="TileMap" parent="TileMap"]
modulate = Color(1, 0.0470588, 0.0392157, 1)
light_mask = 3
z_index = 464
tile_set = ExtResource("7_ustfr")
format = 2
script = ExtResource("8_1hg51")

[node name="Node2D" type="Node2D" parent="."]
position = Vector2(1152, 0)
