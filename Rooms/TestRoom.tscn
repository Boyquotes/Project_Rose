[gd_scene load_steps=15 format=3 uid="uid://b8girgm16ppp4"]

[ext_resource type="PackedScene" uid="uid://66ygb7fkbk5i" path="res://Game Objects/Actors/Players/Rose/Rose.tscn" id="2"]
[ext_resource type="Texture2D" uid="uid://b4omfl7t1ktrt" path="res://Assets/Primitive Tiles/LightGrey/LightGrey_Box32x32.png" id="2_fm3ry"]
[ext_resource type="PackedScene" uid="uid://dfbmule40f014" path="res://Game Objects/Testing/Cape.tscn" id="5"]
[ext_resource type="Texture2D" uid="uid://cmfubhpbjx123" path="res://Assets/Sprites/Actors/Enemies/Woodeater_Soldier/Woodeater_Soldier_Prototype.png" id="6"]
[ext_resource type="Texture2D" uid="uid://d3qc01yn7toqk" path="res://Assets/Lights/light.png" id="7"]
[ext_resource type="Texture2D" uid="uid://bgjc0dgihi4to" path="res://Assets/Lights/background.png" id="8"]
[ext_resource type="Texture2D" uid="uid://lbs46gau1u64" path="res://Assets/Lights/spot.png" id="9"]
[ext_resource type="Texture2D" uid="uid://bttdv057u2u1c" path="res://Assets/Sprites/Actors/Rose/cape.png" id="10"]
[ext_resource type="Texture2D" uid="uid://uc57t5owk1lq" path="res://Assets/Sprites/Actors/Rose/capetrim.png" id="11"]
[ext_resource type="Script" path="res://Game Objects/Testing/mouse_follow.gd" id="16"]

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_bj7kq"]
texture = ExtResource( "2_fm3ry" )
texture_region_size = Vector2i(32, 32)
0:0/0 = 0
0:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:0/0/physics_layer_0/angular_velocity = 0.0
0:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
0:1/0 = 0
0:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:1/0/physics_layer_0/angular_velocity = 0.0
0:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
1:0/0 = 0
1:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:0/0/physics_layer_0/angular_velocity = 0.0
1:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
1:1/0 = 0
1:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:1/0/physics_layer_0/angular_velocity = 0.0
1:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)

[sub_resource type="TileSet" id="TileSet_2dlh4"]
tile_size = Vector2i(32, 32)
physics_layer_0/collision_layer = 1
physics_layer_0/collision_mask = 12
sources/0 = SubResource( "TileSetAtlasSource_bj7kq" )
tile_proxies/source_level = []
tile_proxies/coords_level = []
tile_proxies/alternative_level = []

[sub_resource type="Shader" id="1"]
code = "shader_type canvas_item;

uniform vec2 root_pos = vec2(0,0);
uniform float normfac = 1.0;
uniform float first_stage : hint_range(0.0, 1.0) = 0.5; 
uniform float first_smooth : hint_range(0.0, 1.0) = 0.0; // Lengthens the color transition
uniform float second_stage : hint_range(0.0, 1.0) = 0.0;   // If left at 0, only level 1 is used.
uniform float second_smooth : hint_range(0.0, 1.0) = 0.0;
uniform float min_light : hint_range(0.0, 1.0) = 0.0;
uniform float mid_light : hint_range(0.0, 1.0) = 0.0;
uniform float max_light : hint_range(0.0, 1.0) = 1.0;
uniform float obj_light_add : hint_range(0.0, 1.0) = 0.0;

float light_calc(float light_strength, float would_be_strength) {
	float target_strength = light_strength + would_be_strength * obj_light_add;
	if (target_strength == 0.0) {target_strength = 0.000001;}
	if (would_be_strength == 0.0) {would_be_strength = 1.0;}
	return(target_strength / would_be_strength);
}
void fragment() {
	NORMAL.z = normfac;
}
void light(){
	//LIGHT_COLOR = COLOR;
	LIGHT = COLOR;
}
/*
void light() {
	float level_1 = first_stage;
	float level_1_smooth = first_smooth;
	float level_2 = second_stage;
	float level_2_smooth = second_smooth;
	
	float mid_range_light = mid_light;
	if (mid_light == 0.0) { mid_range_light = max_light * 0.5; }
	vec3 light_normal = normalize(vec3(LIGHT_VEC, -LIGHT_HEIGHT));
	float would_be_strength = max(dot(-light_normal, NORMAL), 0.0);
	if (would_be_strength > level_1 && level_2 == 0.0 ) {
		float diff = smoothstep(level_1, (level_1 + level_1_smooth), would_be_strength) + min_light;
		if (diff >= max_light) {diff = max_light;}
		LIGHT *= light_calc(diff, would_be_strength);
	} else if (would_be_strength > level_1 && would_be_strength < level_2 && level_2 != 0.0 ) {
		float diff = smoothstep(level_1, (level_1 + level_1_smooth), would_be_strength) + min_light;
		if (diff >= mid_range_light ) {diff = mid_range_light;}
		LIGHT *= light_calc(diff, would_be_strength);
	} else if (would_be_strength >= level_2 && level_2 != 0.0 ) {
		float diff = smoothstep(level_2, (level_2 + level_2_smooth), would_be_strength) + mid_range_light;
		if (diff < mid_range_light ) {diff = mid_range_light;}
		if (diff >= max_light) {diff = max_light;}
		LIGHT *= light_calc(diff, would_be_strength);
	} else { 
		if (min_light != 0.0) { 
			LIGHT_VEC = -NORMAL.xy*length(LIGHT_VEC); 
		}
		LIGHT *= min_light;   
		                                                                                                                               
	}
}
*/
/*
uniform sampler2D norm;
uniform float theta = 0.0;
uniform vec2 root_pos = vec2(0,0);

void fragment() {
	NORMAL = vec3(0, 0, sign(root_pos.y - FRAGCOORD.y) * 2.0 );
	
	// Get the vertex color or the color from the texture if set
	vec4 finalColor = min(texture(TEXTURE, UV), COLOR);
	COLOR = finalColor;
}


void light()
{
	//float tempx = LIGHT_VEC.x;
	//float tempy = -LIGHT_VEC.y;
	//LIGHT_VEC.x = tempx * cos(theta) - tempy * sin(theta);
	//LIGHT_VEC.y = tempx * sin(theta) + tempy * cos(theta);
	LIGHT = COLOR;
	SHADOW_COLOR = vec4(83, 31, 31, 255);
}
*/"

[sub_resource type="ShaderMaterial" id="2"]
shader = SubResource( "1" )
shader_param/root_pos = Vector2(0, 0)
shader_param/normfac = 17.625
shader_param/first_stage = 0.0
shader_param/first_smooth = 0.0
shader_param/second_stage = 0.0
shader_param/second_smooth = 0.0
shader_param/min_light = 0.0
shader_param/mid_light = 0.0
shader_param/max_light = 0.805
shader_param/obj_light_add = 0.0

[node name="TestRoom" type="Node2D"]
script = null

[node name="Sprite" type="Sprite2D" parent="."]
visible = false
modulate = Color(0.27451, 0.27451, 0.27451, 1)
light_mask = 2
scale = Vector2(20, 20)
texture = ExtResource( "8" )
script = null

[node name="CanvasModulate" type="CanvasModulate" parent="."]
color = Color(0.5, 0.36, 0.36, 1)
script = null

[node name="TileMap2" type="TileMap" parent="."]
skew = 4.37114e-08
tile_set = SubResource( "TileSet_2dlh4" )
collision_visibility_mode = 1
format = 2
layer_0/tile_data = PackedInt32Array(131070, 0, 0, 131071, 0, 0, 65536, 0, 0, 65537, 0, 0, 65538, 0, 0, 65539, 0, 0)
script = null

[node name="Rose" parent="." instance=ExtResource( "2" )]
position = Vector2(32, -9)
skew = 4.37114e-08
move_states = {
"action": NodePath("MoveStates/Action"),
"hit": NodePath("MoveStates/Hit"),
"ledge_grab": NodePath("MoveStates/LedgeGrab"),
"move_in_air": NodePath("MoveStates/MoveInAir"),
"move_on_ground": NodePath("MoveStates/MoveOnGround")
}

[node name="Sprite" parent="Rose/Sprites" index="0"]
material = null
offset = Vector2(2, -1)
hframes = 5

[node name="BaseAnimator" parent="Rose/Animators" index="0"]
blend_times = []

[node name="ShaderAnimator" parent="Rose/Animators" index="1"]
blend_times = []

[node name="Position2D" parent="Rose/Utilities/CapeTarget" index="0"]
position = Vector2(-6, 3)

[node name="Position2D2" parent="Rose/Utilities/CapeTarget" index="1"]
position = Vector2(-4, 3)

[node name="Position2D3" parent="Rose/Utilities/CapeTarget" index="2"]
position = Vector2(-1, 3)

[node name="Position2D4" parent="Rose/Utilities/CapeTarget" index="3"]
position = Vector2(2, 3)

[node name="Position2D5" parent="Rose/Utilities/CapeTarget" index="4"]
position = Vector2(4, 3)

[node name="Cape" parent="." instance=ExtResource( "5" )]
material = SubResource( "2" )
z_index = 5
phys_obj_path = NodePath("../Rose")
targets_path = NodePath("../Rose/Utilities/CapeTarget")
influencers_path = NodePath("../Rose/Utilities/CapeInfluencers")
wind_path = NodePath("../Rose/Utilities/WindNode")
texture = ExtResource( "10" )
trim_texture = ExtResource( "11" )

[node name="Woodeater_Soldier_Prototype" type="Sprite2D" parent="."]
position = Vector2(-71, 25)
texture = ExtResource( "6" )
script = null

[node name="DirectionalLight2D" type="DirectionalLight2D" parent="."]
light_mask = 2
position = Vector2(75, -41)
rotation = -0.872665
skew = 4.37114e-08
energy = 0.5
range_item_cull_mask = 2
shadow_enabled = true
script = null

[node name="DirectionalLight2D2" type="DirectionalLight2D" parent="."]
light_mask = 2
position = Vector2(75, -41)
skew = 4.37114e-08
energy = 0.5
range_item_cull_mask = 2
shadow_enabled = true
script = null

[node name="DirectionalLight2D3" type="DirectionalLight2D" parent="."]
light_mask = 2
position = Vector2(75, -41)
rotation = 0.872665
skew = 4.37114e-08
energy = 0.5
range_item_cull_mask = 2
shadow_enabled = true
script = null

[node name="Light2D" type="PointLight2D" parent="."]
visible = false
position = Vector2(152, -60)
z_index = 4
range_item_cull_mask = 2
shadow_enabled = true
shadow_item_cull_mask = 2
texture = ExtResource( "7" )
script = ExtResource( "16" )
speed = 0.0

[node name="Sprite" type="Sprite2D" parent="Light2D"]
texture = ExtResource( "9" )
script = null

[editable path="Rose"]
